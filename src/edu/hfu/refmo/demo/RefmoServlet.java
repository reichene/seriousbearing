package edu.hfu.refmo.demo;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Logger;

import javax.persistence.EntityManager;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.appengine.api.datastore.DatastoreService;
import com.google.appengine.api.datastore.DatastoreServiceFactory;
import com.google.appengine.api.datastore.Entity;
import com.googlecode.objectify.Key;
import com.googlecode.objectify.Objectify;
import com.googlecode.objectify.ObjectifyService;
import com.googlecode.objectify.Result;

import edu.hfu.refmo.policystore.Rule;
import edu.hfu.refmo.policystore.objectify.Condition;
import edu.hfu.refmo.policystore.objectify.NoSqlRule;
import edu.hfu.refmo.policystore.objectify.OfyService;
import edu.hfu.refmo.policystoremanager.DBConnectionManagerSingleton;
import edu.hfu.refmo.policystoremanager.EMFSingleton;
import edu.hfu.rest.jersey.action.RequestManager;

@SuppressWarnings("serial")
public class RefmoServlet extends HttpServlet {
	
	private static final Logger log = Logger.getLogger(RequestManager.class.getName());
	
	public void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws IOException {
		resp.setContentType("text/plain");
		
		/*
		 *  Datastore
		 *  
		 	*/
			 try{
		  DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
		   Entity employee = new Entity("Employee");
		   employee.setProperty("firstName", "Antonio");
		   employee.setProperty("lastName", "Salieri");

		   Date hireDate = new Date();
		   employee.setProperty("hireDate", hireDate);
		   employee.setProperty("attendedHrTraining", true);
		  datastore.put(employee);
		  

			 }
			 catch(Exception e){
				 
				 e.printStackTrace();
			 }
			 System.out.println("Hallowelt welt welt");

			 
			 
			  
			  /*
			   *  Datastore Objectify
			   */
			 
			 
			Objectify ofy = OfyService.ofy();
			
			NoSqlRule rule_1 = new NoSqlRule("permit", "Regel 1"); 
			
			
		//	OfyService.ofy().

//			 Condition porsche = new Condition("2FAST", 2);
//			 ofy.save().entity(porsche).now();    // async without the now()
//
//			 assert porsche.id != null;    // id was autogenerated
//
//			 // Get it back
//			 Result<Condition> result = ofy.load().key(Key.create(Condition.class, porsche.id));  // Result is async
//			 Condition fetched1 = result.now();    // Materialize the async value
//
//			 // More likely this is what you will type
//			 Condition fetched2 = ofy.load().type(Condition.class).id(porsche.id).now();
//
//			 // Or you can issue a query
//			 Condition fetched3 = ofy.load().type(Condition.class).filter("license", "2FAST").first().now();
//
//			 // Change some data and write it
//			 porsche.color = 2;
//			 ofy.save().entity(porsche).now();    // async without the now()
//
//			 // Delete it
//			// ofy.delete().entity(porsche).now();    // async without the now()
			 
			 
			 /**
			  * JDBC
			  * 
			  */
			 try {
			 Connection conn = DBConnectionManagerSingleton.getConnection();
			 Statement st = conn.createStatement(); 
			 ResultSet res = st.executeQuery("SELECT * FROM Rule");
			 while (res.next()) { 
			

			     log.info(res.getString("idRule"));
			     log.info(res.getString("description"));
			 } 
			 
			 
			 conn.close(); } 
		    catch (Exception e) { e.printStackTrace(); } 
			 

			 
			 /**
			  *  JPA / Nucleas
			  * 
			  * 
			  */
			 
			 try{
		     // Insert a few rows.
		  EntityManager em = EMFSingleton.getEMF().createEntityManager();
		  em.getTransaction().begin();
		  
		  Rule nrule1 = new Rule( "new rule", "permit");
		// Target t1 =  new Target("action");
		// Target t2 = new Target("subject");
		//  nrule1.addTarget(t1);
		//  nrule1.addTarget(t2);
		  em.persist(nrule1);
		//  em.persist(7);
		 // em.persist(new Greeting("user", new Date(), "Hi!"));
		  em.getTransaction().commit();
		  em.close();
			 }
			 catch(Exception e){
				 
				 e.printStackTrace();
			 }

		
		
		
		resp.getWriter().println("Hello, world - Demo application  finished successfully");
	}
}
